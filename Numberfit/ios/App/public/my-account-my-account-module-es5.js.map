{"version":3,"sources":["webpack:///src/app/my-account/my-account.page.html","webpack:///src/app/my-account/my-account-routing.module.ts","webpack:///src/app/my-account/my-account.module.ts","webpack:///src/app/my-account/my-account.page.scss","webpack:///src/app/my-account/my-account.page.ts"],"names":["routes","path","component","MyAccountPageRoutingModule","imports","forChild","exports","MyAccountPageModule","declarations","MyAccountPage","router","route","formBuilder","yearGroups","schoolList","name","email","modifyDetailsFormGroup","group","password1","required","password2","year","school","xhttpDetails","XMLHttpRequest","DOM","onreadystatechange","readyState","status","console","log","userObj","JSON","parse","responseText","changeToLoadedData","open","cookie","send","value","credentials","password","hashStr","length","xhttp","setRequestHeader","stringify","alert","reset","username","snapshot","paramMap","get","getUserDetails","selector","template"],"mappings":"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","file":"my-account-my-account-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <meta charset=\\\"UTF-8\\\">\\n  <ion-toolbar>\\n    <ion-title><img class=\\\"header-image\\\" src=\\\"/assets/NumberfitLogo.png\\\"/></ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n<ion-card>\\n  <ion-card-header>\\n    <ion-title class=\\\"welcome-card-title\\\">My Account</ion-title>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <form [formGroup]=\\\"modifyDetailsFormGroup\\\">\\n    <ion-item style=\\\"margin-top: 20px;\\\">\\n      <ion-label>Name</ion-label>\\n      <ion-input value={{name}} readonly style=\\\"text-align: right;\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Email</ion-label>\\n      <ion-input value={{email}} readonly type=\\\"email\\\" style=\\\"text-align: right;\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Year Group</ion-label>\\n      <ion-select\\n            formControlName=\\\"year\\\" multiple=\\\"false\\\"\\n            cancelText=\\\"Cancel\\\" okText=\\\"Select\\\">\\n            <ion-select-option *ngFor=\\\"let year of yearGroups\\\" value={{year}}>\\n              {{year}}\\n            </ion-select-option>\\n          </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>School</ion-label>\\n      <ion-select\\n            formControlName=\\\"school\\\" id=\\\"schoolSelect\\\"\\n            multiple=\\\"false\\\" cancelText=\\\"Cancel\\\" okText=\\\"Select\\\">\\n            <ion-select-option *ngFor=\\\"let school of schoolList\\\" value={{school}}>\\n              {{school}}\\n            </ion-select-option>\\n          </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Change Password</ion-label>\\n      <ion-input formControlName=\\\"password1\\\" type='password'></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Comfirm Password</ion-label>\\n      <ion-input formControlName=\\\"password2\\\" type='password'></ion-input>\\n    </ion-item>\\n    <br>\\n    <ion-button\\n          (click)=\\\"modifyDetails()\\\"\\n          expand='block'>\\n          Confirm Changes\\n    </ion-button>\\n    </form>\\n  </ion-card-content>\\n</ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyAccountPage } from './my-account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyAccountPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyAccountPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyAccountPageRoutingModule } from './my-account-routing.module';\n\nimport { MyAccountPage } from './my-account.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    MyAccountPageRoutingModule\n  ],\n  declarations: [MyAccountPage]\n})\nexport class MyAccountPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LWFjY291bnQvbXktYWNjb3VudC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, ControlContainer } from '@angular/forms';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.page.html',\n  styleUrls: ['./my-account.page.scss'],\n})\nexport class MyAccountPage implements OnInit {\n\n  cookie: string;\n  userObj: any;\n  modifyDetailsFormGroup: FormGroup;\n  // formBuilder: FormBuilder;\n  yearGroups: Array<string>;\n  schoolList: Array<string>;\n  name: string;\n  email: string;\n\n  constructor(private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder) { \n    this.yearGroups = ['Year 1', 'Year 2', 'Year 3', 'Year 4', 'Year 5', 'Year 6'];\n    this.schoolList = ['UCL', 'LSE', 'Imperial'];\n    this.name = \"Loading..\";\n    this.email = \"Loading..\";\n    this.modifyDetailsFormGroup = formBuilder.group({\n      // name: [\"\", [Validators.required]],\n      // email: [\"\", [Validators.required, Validators.email]],\n      password1: [\"\", [Validators.required]],\n      password2: [\"\", [Validators.required]],\n      year: [\"\", [Validators.required]],\n      school: [\"\", [Validators.required]],\n    });\n  }\n\n  getUserDetails(){\n    var xhttpDetails = new XMLHttpRequest();\n    let DOM = this;\n\n    xhttpDetails.onreadystatechange = function() {\n      if (this.readyState == 4 && this.status == 200) {\n        console.log(\"GET details request succeeded\");\n        DOM.userObj = JSON.parse(this.responseText);\n        DOM.changeToLoadedData();\n      } else if(this.status != 200) {\n        console.log(\"GET request failed with status \" + this.status);\n      }\n    };\n\n    // Define and send the GET request\n    xhttpDetails.open(\"GET\", \"http://localhost:3000/myDetails?cookie=\" + this.cookie, true);\n    xhttpDetails.send();\n  }\n\n  modifyDetails(){\n    const DOM = this;\n\n    const password1 = this.modifyDetailsFormGroup.value.password1;\n    const password2 = this.modifyDetailsFormGroup.value.password2;\n\n    const credentials = {\n      // username : this.modifyDetailsFormGroup.value.email.toLowerCase(),\n      password : Md5.hashStr(password1),\n      // name     : this.modifyDetailsFormGroup.value.name,\n      year     : this.modifyDetailsFormGroup.value.year,\n      school   : this.modifyDetailsFormGroup.value.school\n    };\n\n    if(password1==password2 && password1.length > 7){\n      var xhttp = new XMLHttpRequest();\n\n      xhttp.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n          const cookie = JSON.parse(this.responseText);\n          console.log(cookie);\n        } else if(this.status != 200) {\n          console.log(this.responseText);\n\n        }\n      };\n      console.log(credentials);\n      xhttp.open('POST', 'http://localhost:3000/modifyDetails', true);\n      xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp.send(JSON.stringify(credentials));\n\n    } else{\n      // error!!!\n      alert(\"Please ensure your password is at least 8 characters and matches the confirmation field\");\n    }\n\n  }\n\n  changeToLoadedData(){\n    this.modifyDetailsFormGroup.reset({school: this.userObj.school, year: \"Year \" + this.userObj.year});\n    this.name = this.userObj.name;\n    this.email = this.userObj.username;\n  }\n\n  ngOnInit() {\n    this.cookie = this.route.snapshot.paramMap.get('cookie');\n    console.log(this.cookie);\n    this.getUserDetails();\n    // this.modifyDetailsFormGroup.reset({name: this.userObj.name});\n    // this.modifyDetailsFormGroup.get('name').setValue(this.userObj.name);\n  }\n\n}\n"]}