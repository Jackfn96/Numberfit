{"version":3,"sources":["./src/app/subject-select/subject-select.page.html","./src/app/subject-select/subject-select-routing.module.ts","./src/app/subject-select/subject-select.module.ts","./src/app/subject-select/subject-select.page.scss","./src/app/subject-select/subject-select.page.ts"],"names":[],"mappings":"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","file":"subject-select-subject-select-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title><img class=\\\"header-image\\\" src=\\\"/assets/NumberfitLogo.png\\\"/></ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content  class=\\\"ion-content\\\">\\n  <ion-card class=\\\"welcome-card\\\">\\n    <ion-card-header>\\n      <ion-card-title id=\\\"title\\\" class=\\\"welcome-card-title\\\">Subject Select</ion-card-title>\\n    </ion-card-header>\\n      <ion-radio-group\\n      id=\\\"radio-group\\\"\\n      allow-empty-selection=“false”\\n      *ngFor=\\\"let sub of subjects\\\">\\n      <ion-item>\\n        <ion-label>{{sub.Topic}}</ion-label>\\n        <ion-radio id={{sub.Topic}} value={{sub.Topic}} slot=\\\"end\\\" (click)=onSelect(sub.Topic)></ion-radio>\\n      </ion-item>\\n      </ion-radio-group>\\n    <ion-button id=\\\"btn-play\\\" expand=\\\"block\\\" fill=\\\"clear\\\">\\n      Play Selected Subject\\n    </ion-button>\\n  </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SubjectSelectPage } from './subject-select.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SubjectSelectPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubjectSelectPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SubjectSelectPageRoutingModule } from './subject-select-routing.module';\n\nimport { SubjectSelectPage } from './subject-select.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SubjectSelectPageRoutingModule\n  ],\n  declarations: [SubjectSelectPage]\n})\nexport class SubjectSelectPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qtc2VsZWN0L3N1YmplY3Qtc2VsZWN0LnBhZ2Uuc2NzcyJ9 */\"","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit }      from '@angular/core';\nimport { NativeStorage }          from '@ionic-native/native-storage/ngx';\nimport { HTTP }                   from '@ionic-native/http/ngx';\n\n@Component({\n  selector    : 'app-subject-select',\n  templateUrl : './subject-select.page.html',\n  styleUrls   : ['./subject-select.page.scss'],\n})\n\nexport class SubjectSelectPage implements OnInit {\n\n  server   : string = require('../config.json').server;\n  cookie   : string;\n  user     : string;\n  subject  : string = \"Addition\"; // Default to Addition\n  subjects = require('./default_subjects.json').availableTopics;\n\n  constructor(\n    private router         : Router,\n    private activatedRoute : ActivatedRoute,\n    private nativeStorage  : NativeStorage,\n    private http           : HTTP,\n\n  ) {\n    // Get cookie from storage\n    this.nativeStorage.getItem('cookie')\n    .then((data) => {this.cookie = data.cookie});\n    // Get user from storage\n    this.nativeStorage.getItem('user')\n    .then((data) => {\n      this.user = data\n\n      this.http.get(\"http://api.numberfit.com:8081/getAvailableTopics\",{},{})\n      .then(data => {\n        this.subjects = JSON.parse(data.data).availableTopics\n        let repeats = this.subjects.length;\n        let deletes = 0;\n        for(var i=0; i<repeats; i++){\n          if(!this.subjects[i-deletes].availableYears.includes(\n            parseInt(this.user[\"year\"]))){\n              this.subjects.splice(i-deletes, 1)\n              deletes += 1;\n          }\n        }\n      })\n      .catch(error => {\n        console.log(\"status\", error.status);\n        console.log(\"error\", error.error);\n\n      });\n\n    });\n\n    // // GET all subjects from Numberfit\n    // var xhttpSubjects = new XMLHttpRequest();\n    // var xhttpDetails  = new XMLHttpRequest();\n    // let DOM = this;\n    //\n    //\n    // // Define the listener function for the GET request\n    // xhttpSubjects.onreadystatechange = function() {\n    //   if (this.readyState == 4 && this.status == 200) {\n    //     // Subjects GOT now get details to check year group\n    //     DOM.subjects = JSON.parse(this.responseText)\n    //     xhttpDetails.send();\n    //   } else if(this.status != 200) {\n    //     console.log(\"GET subjects request failed with satus \" + this.status)\n    //   }\n    // };\n    //\n    // // Define the listener function for the GET request\n    // xhttpDetails.onreadystatechange = function() {\n    //   if (this.readyState == 4 && this.status == 200) {\n    //     console.log(\"GET details request succeeded\")\n    //     // Remove elements not available to that year\n    //     // By now availableTopics is an attribute of DOM.subjects\n    //     console.log(JSON.parse(this.responseText));\n    //     let repeats = DOM.subjects[\"availableTopics\"].length;\n    //     let deletes = 0;\n    //     for(var i=0; i<repeats; i++){\n    //       if(!DOM.subjects[\"availableTopics\"][i-deletes].availableYears.includes(\n    //         parseInt(JSON.parse(this.responseText).year))){\n    //           DOM.subjects[\"availableTopics\"].splice(i-deletes, 1)\n    //           deletes += 1;\n    //       }\n    //     }\n    //\n    //   } else if(this.status != 200) {\n    //     console.log(\"GET details request failed with satus \" + this.status)\n    //   }\n    // };\n    //\n    // // Define and send the GET request\n    // xhttpSubjects.open(\"GET\", \"http://api.numberfit.com:8081/getAvailableTopics\", true);\n    // xhttpDetails.open(\"GET\", this.server+\"/myDetails?cookie=\" + this.cookie, true);\n    // xhttpSubjects.send();\n\n    }\n\n  // Function called when radio button clicked\n  onSelect(topic){\n    // TODO:\n    // Deselct current one on click - stopped working when I\n    // changed it to programmatically fill the list.\n    const radio  = document.getElementById(topic);\n    this.subject = topic;\n  };\n\n  ngOnInit() {\n    let gamemode = this.activatedRoute.snapshot.paramMap.get(\"gamemode\");\n    let DOM = this;\n\n    // Set the title according to the gamemode\n    if(Number(gamemode) === 0){\n      document.getElementById(\"title\").textContent = \"Single Player\";\n    } else {\n      document.getElementById(\"title\").textContent = \"Head-to-Head\";\n    }\n\n    // Add eventListener for form submission\n    document.getElementById(\"btn-play\").addEventListener(\"click\", function(){\n      // Navigate to the respective page\n      if(Number(gamemode) === 0){\n        DOM.router.navigate(['/play-single', DOM.subject]);\n      } else {\n        DOM.router.navigate(['/play-multi', DOM.subject]);\n      }\n    });\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}